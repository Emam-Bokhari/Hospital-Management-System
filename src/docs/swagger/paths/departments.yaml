openapi: 3.0.0
info:
 title: Department Management API 
 description:  API documentation for managing department-related operations, such as creating, retrieving, updating, and more.
 version: "1.0.0"
servers:
  - url: localhost:3000/api/docs
    description: Development Server
paths:
  "/departments":
    post: 
      tags: 
        - departments 
      summary: Create a new department 
      description: >
        Use this endpoint to create a new department with detailed information, including associated doctors, symptoms addressed, and possible causes.
      requestBody: 
        content:
          "application/json":
            schema:
              $ref: "../components/schemas/DepartmentData.yaml"
      responses: 
        "200": 
          description: The department has been successfully created. 
          content: 
            "application/json":
              schema: 
                allOf:
                  - $ref: "../components/responses.yaml#/components/schemas/BaseResponse"
                  - type: object 
                    properties:
                      data: 
                        $ref: "../components/schemas/DepartmentData.yaml"
    get:
      tags: 
        - departments
      summary: Retrieve all departments 
      description: Fetches a list of all available departments with their details.
      responses:
        "200": 
          description: Successful response with department data
          content: 
            "application/json":
              schema: 
                allOf:
                  - $ref: "../components/responses.yaml#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "../components/schemas/DepartmentData.yaml"
  "/departments/{id}":
    get:
      tags:
        - departments
      summary: Retrieve a department by ID 
      description: Fetches the details of a department using its unique ID.
      operationId: getDepartmentById
      parameters:
        - name: id 
          in: path 
          required: true 
          description: The unique identifier for the department.
          schema:
            type: string 
      responses: 
        "200": 
          description: Successfully retrieved department data 
          content: 
            "application/json":
              schema: 
                allOf:
                  - $ref: "../components/responses.yaml#/components/schemas/BaseResponse"
                  - type: object 
                    properties: 
                      data: 
                        $ref: "../components/schemas/DepartmentData.yaml"
    patch:
      tags: 
        - departments
      summary: Update department details by ID
      description: Updates the information of a specific department using its unique ID
      parameters:
        - name: id 
          in: path 
          required: true 
          description: The unique identifier of the department to be updated.
          schema:
            type: string 
      requestBody:
        content:
          "application/json":
            schema: 
              type: object 
              properties:
                departmentName:
                  type: string 
                  example: Neurology 
      responses: 
        "200": 
          description: Successfully updated the department information 
          content:
            "application/json":
              schema: 
                allOf:
                  - $ref: "../components/responses.yaml#/components/schemas/BaseResponse"
                  - type: object 
                    properties:
                      data: 
                        type: object 
                        properties:
                          departmentName:
                            type: string 
                            example: Neurology
    delete: 
      tags: 
        - departments
      summary: Soft Delete a department by ID
      description: Soft Deletes a specific department using its unique ID.
      parameters:
        - name: id 
          in: path 
          required: true 
          description: The unique identifier of the department to be deleted.
          schema:
            type: string 
      responses: 
        "200": 
          description: Successfully deleted the department
          content:
            "application/json":
              schema:
                allOf:
                  - $ref: "../components/responses.yaml#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        example: {}


            
